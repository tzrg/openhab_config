 var String url = "https://www.envertecportal.com//ApiInverters/QueryTerminalReal"
    var String contentType="application/json",
    var String content =  """{
                'page': '1',
                'perPage': '20',
                'orderBy': 'SNALIAS',
                'whereCondition': '{\"STATIONID\": \"538D21E396F744C4827067A5348B3A8F\"}'
                }"""
    var String QueryResult = sendHttpPostRequest(url,contentType,content)
    EnvertecQueryResult.sendCommand(QueryResult)
    EnvertecManualUpdate.postUpdate(OFF)



     
    var modules = response.split("},")
    logInfo("EnvertecAPI", "Number of modules found: " + modules.length)
    
    for (var i = 0; i < modules.length; i++) {
        TestOutput.postUpdate("Processing! " + i)
        var module = modules.get(i)
        //TestOutput.postUpdate("Processing! " + i + " " + module)
        //var powerMatch = module.matchesRegex('.*"POWER":"([0-9.]+)".*')
        var powerMatch = transform("JSONPATH", "$.Data.QueryResults[0].POWER", module)
        TestOutput.postUpdate("powermatch for i=" + i + " " + powerMatch)
        
        
        if (powerMatch) {
            var power = Double.parseDouble(powerMatch.group(1))
            TestOutput.postUpdate("power for i=" + i + " " + power)
            logInfo("EnvertecAPI", "Module " + (i+1) + " power: " + power + " W")
            switch (i) {
                case 0: EnvertecPower1.postUpdate(power)
                case 1: EnvertecPower2.postUpdate(power)
                case 2: EnvertecPower3.postUpdate(power)
                case 3: EnvertecPower4.postUpdate(power)
            }
        } else {
            logWarn("EnvertecAPI", "Could not find POWER value for module " + (i+1))
        }
    }

    

    for (var i = 0; i < 1; i++) {
        //TestOutput.postUpdate("Processing! " + i)
        var module = QueryResults
  
        if (powerMatch) {
            var power = Double.parseDouble(powerMatch.group(1))
            TestOutput.postUpdate("power for i=" + i + " " + power)
            logInfo("EnvertecAPI", "Module " + (i+1) + " power: " + power + " W")
            switch (i) {
                case 0: EnvertecPower1.postUpdate(power)
                case 1: EnvertecPower2.postUpdate(power)
                case 2: EnvertecPower3.postUpdate(power)
                case 3: EnvertecPower4.postUpdate(power)
            }
        } else {
            logWarn("EnvertecAPI", "Could not find POWER value for module " + (i+1))
        }
    }